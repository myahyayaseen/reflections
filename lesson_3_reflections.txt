Reflection Exercise 1:

When would you want to use a remote repository rather than keeping all your work local?

Answer1:

When I am ready to share my work with others who I would like to contribute it to.
Also, when I am ready to make my local work public so people could see it and help
me with it by adding/editing some of my work.

Reflection Exercise 2:

Why might you want to always pull changes manually rather than having Git 
automatically stay up-to-date with your remote repository?

Answer2:

GitHub can have changes made by different contibutors which we might not want
to have. In that case,  it could be inconvenient if all changes are pulled 
automatically and at times when we do not want them.

Reflection Exercise 3:

Describe the differences between forks, clones, and branches. When would you 
use one instead of another?

Answer3:

Forks:
This is a GitHub feature and allows a user to copy any repository into thier 
own account. This is an easier way of cloning a repository without needing to
change the original. So when you want to use and modify someone's code on
GitHub, fork it and copy it to your account.

Clones:
Clone is a copy of a repository either on a local machine or on GitHub. This 
is used to copy a repository in a new directory locally or copy an online 
repository onto local machine. This is used whenever a copy is to be made.

Branches:
Branch is a part of code that we are working on in a give repository. We can 
use branching to keep our code separate to try something new or wild without
affecting the original or master branch.

Reflection Exercise 4:

What is the benefit of having a copy of the last known state of the remote 
stored locally?

Answer4:

Having a copy of last known state of remote helps us when us to find out if
changes have been made while we were offline.

Reflection Ex 5:

How would you collaborate without using Git or GitHub? What would be easier, 
and what would be harder?

Answer5:

Without using Git and GitHub, collaboration would be harder. The only way is to
send the code files to collaborators and ask them to review and make changes to
thier local working directory. No way to keep track who did what and when.

Reflection Exercise 6:

When would you want to make changes in a separate branch rather than directly 
in master? What benefits does each approach have?

Answer6:

Branches are useful for testing new ideas and to share without having a broken
master. It helps to ask for pull request for respective branches to get 
feedback from co-workers and collaborators and merge everything only when it
is free of conflicts and ready to be merged.
